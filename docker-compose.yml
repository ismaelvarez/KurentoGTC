version: "3.5"
services:
  # Orion is the context broker
  orion:
    image: fiware/orion:${ORION_VERSION}
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    ports:
      - "${ORION_PORT}:${ORION_PORT}" # localhost:1026
    command: -dbhost mongo-db -logLevel DEBUG -noCache -corsOrigin __ALL -insecureNotif
    healthcheck:
      test: curl --fail -s http://orion:${ORION_PORT}/version || exit 1
      interval: 5s

  # Databases
  mongo-db:
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "${MONGO_DB_PORT}"
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}" # localhost:27017 # localhost:27017
    networks:
      - default
    volumes:
      - mongo-db:/data
      - "${MONGO_HOST_PATH}:/data/db"
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`; 
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 5s
      
  kurento:
    build: 
      context: kurento-media-server/
      dockerfile: Dockerfile
    image: kms:0.1
    hostname: kms
    container_name: KMS
    network_mode: host
    env_file:
      - .env
    volumes:
      - "${HOST_IMAGE_FOLDER}:${DOCKER_IMAGE_FOLDER}"
      
  kas:      
    image: kas:latest
    hostname: kas 
    container_name: kas
    network_mode: host
    depends_on:
      - kurento
      - orion
    env_file: .env
    volumes:
      - ./kurento-application-server/config/users.txt:/config/users.txt
      - ./kurento-application-server/config/cameras.txt:/config/cameras.txt



networks:
  default:
    ipam:
      config:
        - subnet: 192.168.98.0/24

volumes:
  mongo-db: ~

